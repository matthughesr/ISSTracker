AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # Create a new ECS Cluster
  MyCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: MyFargateCluster

  # Create a Task Definition for the container
  MyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: MyTaskDefinitionFamily
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: arn:aws:iam::525290056279:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Name: MyContainer
          Image: 525290056279.dkr.ecr.us-east-1.amazonaws.com/iss_tracker:latest  # ECR Image URI
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp

  # Create a Security Group for the Fargate Task
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0

  # Create a VPC (optional if not using an existing VPC)
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # Create a Subnet (optional if not using an existing subnet)
  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: '10.0.0.0/24'
      VpcId: !Ref MyVPC

  # Create a Fargate Service
  MyFargateService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref MyCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref MyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Ref: MySubnet
          SecurityGroups:
            - !GetAtt MySecurityGroup.GroupId
          AssignPublicIp: ENABLED































