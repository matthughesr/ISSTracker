AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # Create a new ECS Cluster
  MyCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: MyFargateCluster

  # Create a Task Definition for the container
  MyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: MyTaskDefinitionFamily
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: arn:aws:iam::525290056279:role/ecsTaskExecutionRole 
      ContainerDefinitions:
        - Name: MyContainer
          Image: 525290056279.dkr.ecr.us-east-1.amazonaws.com/iss_tracker:${{ github.sha }}
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp

  # Create a VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyFargateVPC

  # Create an Internet Gateway for public internet access
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyIGW

  # Attach the Internet Gateway to the VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  # Create a public subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      CidrBlock: '10.0.0.0/24'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1

  # Create a second public subnet in a different AZ (best practice)
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1b
      CidrBlock: '10.0.1.0/24'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2

  # Create a Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Create a Route to the Internet Gateway
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref MyInternetGateway

  # Associate the Route Table with the first Subnet
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # Associate the Route Table with the second Subnet
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Create a Security Group for the Fargate Task
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Create a Fargate Service
  MyFargateService:
    Type: AWS::ECS::Service
    DependsOn: AttachGateway
    Properties:
      Cluster: !Ref MyCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref MyTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !GetAtt MySecurityGroup.GroupId
          AssignPublicIp: ENABLED

Outputs:
  ClusterName:
    Description: The name of the ECS cluster
    Value: !Ref MyCluster
  TaskDefinitionArn:
    Description: The ARN of the task definition
    Value: !Ref MyTaskDefinition